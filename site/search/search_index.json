{"config":{"indexing":"full","lang":["en"],"min_search_length":3,"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"Fab Academy For full documentation visit mkdocs.org . About me My name is Collin Kanofsku and I am a Charlotte Latin School student participating in the Fab Academy Program. I aspire to be a mechanical enginneer and I love problem solving. resources mkdocs new [dir-name] - Create a new project. mkdocs serve - Start the live-reloading docs server. mkdocs build - Build the documentation site. mkdocs -h - Print help message and exit.+","title":"Fab Academy"},{"location":"#fab-academy","text":"For full documentation visit mkdocs.org .","title":"Fab Academy"},{"location":"#about-me","text":"My name is Collin Kanofsku and I am a Charlotte Latin School student participating in the Fab Academy Program. I aspire to be a mechanical enginneer and I love problem solving.","title":"About me"},{"location":"#resources","text":"mkdocs new [dir-name] - Create a new project. mkdocs serve - Start the live-reloading docs server. mkdocs build - Build the documentation site. mkdocs -h - Print help message and exit.+","title":"resources"},{"location":"Week%201/","text":"Week 1 - Project Managment and Website Setup Project Management The first part of this week focuses on project managment. To keep myself acountable and on schedule, I created a google sheets with each date and what I need to do on said dates. SPREADSHEET IMAGE HERE Website Setup for a Windows Computer Before I explain the proccess, shoutout to Richard Shan , Adam Stone , and Adrian torres Documentation and Help that made my website work. Step 1 Install Git and Python Also make sure you have a folder made to house your Fab Files Step 2 Getting an SSH key from your personal computer : tell your computer what your github account is by inputing: git config \u2013-global user.name \u201cfirstName.lastName\u201d then, check if you have a pre existing SSH key by using : cat ~/.ssh/id_rsa.pub If you get a message saying you don't have a SSH Key, then create one through : ssh-keygen -t rsa -C \u201cyour_email\u201d Hit enter until the keys randart image appears finally, to see the public key needed to link your computer to Git, type : cat ~/.ssh/id_rsa.pub Copy that long string by highlighting and right clicking for copy Step 3 Open GitLab and click on profile button in the top left area Go to \"edit profile\" and click on SSH Keys in the left side menu. Select \"Add new key\" and paste your SSH Key Step 4 This next step is optional, but highly reccomended. We are now going to clone our repo so we have a copy on our computer at all times. This ensures you don't loose things in an accident and also allows you to work offline open up windows powershell and navigate into your Fab Folder : cd ______ Helpfull Tip = Hit tab after cd to get possible options(don't forget the space after cd when doing this) Enter gitlab and click the blue code button. Then, click the clipboard with a dotted box icon below and to the right of the \"clone with SSH Key\" text. Now that we have Git's SSH clone key, go back to powershell and type : git clone Your_git_SSH_Key_Here When this command finished, a new file should be created under your name in your fab folder Step 5 Now that we have cloned and connected the repo, we will now add mkdocs onto our computer and fab file. To start, open up windows powershell and go to your fab folder(Not the First.Lastname file from Git) cd ____ Then, we install mkdocs using : pip install mkdocs If you are having problems that say \"pip is not recognized\", Richard Shan says that \"pip3 install mkdocs\" will work Step 6 Last step before we start writing our website, we need to create a new mkdocs file for us to write on. Once again, enter your fab folder, then the First-Last name folder in windows powershell and type the command below with your git dir name(Usually first and last name): mkdocs new FirstName-LastName This initializes mkdocs and allows us to use the command below to actually create the file. mkdocs serve Yay! Now the powershell wierdness of the website building is done! Pushing to the remote website, Theme changing, and helpfull tips Pushing Code Whenever you are done with your changes in code, you need to push it to the remote GitLab repo. This will update the public website fir everyone to see. Use these 3 commands in the order given to push code : git add --all git commit -m \"Name the commit in these brackets\" git push After pushing code, you can ensure that the code makes it into your website by going into GitLab and opening piplines under the build button The pipeline viewer is a super usefull tool becuase it shows you when your push is completed and if your push fails, you can view the error and even the lines of code that caused the failure. Theme When I tried to change the theme of my website, the first theme I went to was a template theme called makethedocs. However, it was too basic for me, so after a long time of searching, trial and error, and working together with other people, I finally found how to change it. I used the premade themes in this [catalog] The catalog told me that to use a theme, I must enter the mkdocs.yml file and change the theme to the premade theme name. Then, I had to do a pip install __whatever the template you chose said to put__ Finally and most importanlty, I had to open the requirment text file and write (EX:) mkdocs-material or whatever you wrote when you did the pip install","title":"Week 1"},{"location":"Week%201/#week-1-project-managment-and-website-setup","text":"","title":"Week 1 - Project Managment and Website Setup"},{"location":"Week%201/#project-management","text":"The first part of this week focuses on project managment. To keep myself acountable and on schedule, I created a google sheets with each date and what I need to do on said dates. SPREADSHEET IMAGE HERE","title":"Project Management"},{"location":"Week%201/#website-setup-for-a-windows-computer","text":"Before I explain the proccess, shoutout to Richard Shan , Adam Stone , and Adrian torres Documentation and Help that made my website work.","title":"Website Setup for a Windows Computer"},{"location":"Week%201/#step-1","text":"Install Git and Python Also make sure you have a folder made to house your Fab Files","title":"Step 1"},{"location":"Week%201/#step-2","text":"Getting an SSH key from your personal computer : tell your computer what your github account is by inputing: git config \u2013-global user.name \u201cfirstName.lastName\u201d then, check if you have a pre existing SSH key by using : cat ~/.ssh/id_rsa.pub If you get a message saying you don't have a SSH Key, then create one through : ssh-keygen -t rsa -C \u201cyour_email\u201d Hit enter until the keys randart image appears finally, to see the public key needed to link your computer to Git, type : cat ~/.ssh/id_rsa.pub Copy that long string by highlighting and right clicking for copy","title":"Step 2"},{"location":"Week%201/#step-3","text":"Open GitLab and click on profile button in the top left area Go to \"edit profile\" and click on SSH Keys in the left side menu. Select \"Add new key\" and paste your SSH Key","title":"Step 3"},{"location":"Week%201/#step-4","text":"This next step is optional, but highly reccomended. We are now going to clone our repo so we have a copy on our computer at all times. This ensures you don't loose things in an accident and also allows you to work offline open up windows powershell and navigate into your Fab Folder : cd ______ Helpfull Tip = Hit tab after cd to get possible options(don't forget the space after cd when doing this) Enter gitlab and click the blue code button. Then, click the clipboard with a dotted box icon below and to the right of the \"clone with SSH Key\" text. Now that we have Git's SSH clone key, go back to powershell and type : git clone Your_git_SSH_Key_Here When this command finished, a new file should be created under your name in your fab folder","title":"Step 4"},{"location":"Week%201/#step-5","text":"Now that we have cloned and connected the repo, we will now add mkdocs onto our computer and fab file. To start, open up windows powershell and go to your fab folder(Not the First.Lastname file from Git) cd ____ Then, we install mkdocs using : pip install mkdocs If you are having problems that say \"pip is not recognized\", Richard Shan says that \"pip3 install mkdocs\" will work","title":"Step 5"},{"location":"Week%201/#step-6","text":"Last step before we start writing our website, we need to create a new mkdocs file for us to write on. Once again, enter your fab folder, then the First-Last name folder in windows powershell and type the command below with your git dir name(Usually first and last name): mkdocs new FirstName-LastName This initializes mkdocs and allows us to use the command below to actually create the file. mkdocs serve","title":"Step 6"},{"location":"Week%201/#yay-now-the-powershell-wierdness-of-the-website-building-is-done","text":"","title":"Yay! Now the powershell wierdness of the website building is done!"},{"location":"Week%201/#pushing-to-the-remote-website-theme-changing-and-helpfull-tips","text":"","title":"Pushing to the remote website, Theme changing, and helpfull tips"},{"location":"Week%201/#pushing-code","text":"Whenever you are done with your changes in code, you need to push it to the remote GitLab repo. This will update the public website fir everyone to see. Use these 3 commands in the order given to push code : git add --all git commit -m \"Name the commit in these brackets\" git push After pushing code, you can ensure that the code makes it into your website by going into GitLab and opening piplines under the build button The pipeline viewer is a super usefull tool becuase it shows you when your push is completed and if your push fails, you can view the error and even the lines of code that caused the failure.","title":"Pushing Code"},{"location":"Week%201/#theme","text":"When I tried to change the theme of my website, the first theme I went to was a template theme called makethedocs. However, it was too basic for me, so after a long time of searching, trial and error, and working together with other people, I finally found how to change it. I used the premade themes in this [catalog] The catalog told me that to use a theme, I must enter the mkdocs.yml file and change the theme to the premade theme name. Then, I had to do a pip install __whatever the template you chose said to put__ Finally and most importanlty, I had to open the requirment text file and write (EX:) mkdocs-material or whatever you wrote when you did the pip install","title":"Theme"}]}